name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: budgetwise_db_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      NODE_ENV: test
      DB_HOST: localhost
      DB_PORT: 3306
      DB_NAME: budgetwise_db_test
      DB_USER: root
      DB_PASSWORD: test_password

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint

<<<<<<< HEAD
<<<<<<< HEAD
      # - name: Run tests
      #   run: npm run test:coverage
=======
      # - name: Run ESLint
      #   run: npm run lint

      - name: Run tests
        run: npm run test:coverage

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: ./coverage/lcov.info
      #     flags: unittests
      #     name: codecov-umbrella
>>>>>>> f412002 (update)
=======
      # - name: Run tests
      #   run: npm run test:coverage
>>>>>>> 96b1fd7 (update)

  deploy:
    name: Deploy to my Render Account
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          api-key: ${{ secrets.RENDER_API_KEY }}
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
